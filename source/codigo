import pandas as pd
from openpyxl import load_workbook, Workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from datetime import datetime, timedelta
from copy import copy
import os
import traceback

try:
    caminho_arquivo = r"C:\Users\leosouza\Arcor\GC_BR_Planejamento_Logístico - Documentos\3. BRA-Roteirizacao\Ordens de Coleta 2025\05 CD CTG\ORDEM DE COLETA CTG.xlsx"
    amanha = str(int((datetime.today() + timedelta(days=1)).strftime('%d')))
    print(f"Aba esperada: '{amanha}'")

    df = pd.read_excel(caminho_arquivo, sheet_name=amanha, header=14)
    df.columns = [col.strip().upper() for col in df.columns]

    df_filtrado = df[
        (df['TRANSP.'] == 'MVC') & 
        (~df['EMAIL OK'].isin(['SEPARAR', 'FATURAR']))
    ]

    if df_filtrado.empty:
        print("⚠️ Nenhum dado encontrado após o filtro.")
    else:
        wb_original = load_workbook(caminho_arquivo, data_only=True)
        ws_origem = wb_original[amanha]

        wb_novo = Workbook()
        ws_novo = wb_novo.active
        ws_novo.title = amanha

        # Cabeçalho
        for col_idx, col_name in enumerate(df_filtrado.columns, start=1):
            cell = ws_novo.cell(row=1, column=col_idx, value=col_name)
            ref_cell = ws_origem.cell(row=15, column=col_idx)
            cell.font = copy(ref_cell.font)
            cell.border = copy(ref_cell.border)
            cell.fill = copy(ref_cell.fill)
            cell.number_format = copy(ref_cell.number_format)
            cell.protection = copy(ref_cell.protection)
            cell.alignment = copy(ref_cell.alignment)

        # Dados
        for r_idx, row in enumerate(dataframe_to_rows(df_filtrado, index=False, header=False), start=2):
            for c_idx, value in enumerate(row, start=1):
                new_cell = ws_novo.cell(row=r_idx, column=c_idx, value=value)
                ref_cell = ws_origem.cell(row=r_idx + 14, column=c_idx)
                new_cell.font = copy(ref_cell.font)
                new_cell.border = copy(ref_cell.border)
                new_cell.fill = copy(ref_cell.fill)
                new_cell.number_format = copy(ref_cell.number_format)
                new_cell.protection = copy(ref_cell.protection)
                new_cell.alignment = copy(ref_cell.alignment)

        # Largura das colunas
        for col_letter, dim in ws_origem.column_dimensions.items():
            ws_novo.column_dimensions[col_letter].width = dim.width

        # Altura das linhas
        for row_idx, dim in ws_origem.row_dimensions.items():
            if row_idx >= 15:
                ws_novo.row_dimensions[row_idx - 14].height = dim.height

        # Salvar com segurança
        pasta_onedrive = r"C:\Users\leosouza\OneDrive - Arcor\Documentos\PowerAutomate"
        os.makedirs(pasta_onedrive, exist_ok=True)

        nome_saida = f"Grade_MVC_{amanha}.xlsx"
        caminho_saida = os.path.join(pasta_onedrive, nome_saida)
        caminho_temp = os.path.join(pasta_onedrive, f"__temp_{nome_saida}")

        wb_novo.save(caminho_temp)
        os.replace(caminho_temp, caminho_saida)

        print(f"✅ Arquivo final salvo com sucesso em: {caminho_saida}")

except Exception as e:
    with open(r"C:\Users\leosouza\erro_script.txt", "w") as f:
        f.write("Erro ao executar script:\n")
        f.write(traceback.format_exc())